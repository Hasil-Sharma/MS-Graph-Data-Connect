{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "destinationServicePrincipalAadId": {
      "type": "string",
      "metadata": {
        "description": "The AAD object Id of the service principal that needs to access the destination Data Lake store."
      }
    },
    "destinationServicePrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The id of the service principal that has access to the destination Data Lake store."
      }
    },
    "destinationServicePrincipalKey": {
      "type": "string",
      "metadata": {
        "description": "The key of the service principal that has access to the destination Data Lake store."
      }
    },
    "destinationAdlsGen2AccountName": {
      "type": "string",
      "metadata": {
        "description": "The name for the ADLS gen2 account name where the data will be copied to."
      }
    },
    "destinationAdlsGen2AccountKey": {
      "type": "string",
      "metadata": {
        "description": "The access key for the ADLS gen2 account where the data will be copied to."
      }
    },
    "userAssignedManagedIdentityName": {
      "type": "string",
      "metadata": {
        "description": "The user assigned managed identity name that the HDI cluster will use to access the storage account."
      }
    },
    "userAssignedManagedIdentityClientId": {
      "type": "string",
      "metadata": {
        "description": "The user assigned managed identity client id that the HDI cluster will use to access the storage account."
      }
    },
    "userAssignedManagedIdentityObjectId": {
      "type": "string",
      "metadata": {
        "description": "The user assigned managed identity object id that the HDI cluster will use to access the storage account."
      }
    },
     "hdiClusterPassword": {
      "type": "string",
      "metadata": {
        "description": "The password for the admin account on the HDI cluster. The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "webSiteName": {
      "type": "string"
    },
    "triggerStartTime": {
      "type": "string",
      "metadata": {
        "description": "The time when the trigger will first start to run the pipeline. Everything prior to this time will be backfilled."
      }
    },
    "backFillInterval": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
          "description": "The number of days to backfill on the first run."
      }
    },
    "allowedGroups": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The object ids of the groups of users to extract data from. List up to 10 groups."
      }
    }
  },
  "variables": {
    "dataFactoryName": "[concat('myadf', uniqueString(resourceGroup().id))]",
    "dataFactoryId": "[concat('Microsoft.DataFactory/factories/', variables('dataFactoryName'))]",
    "destinationAdlsGen2URL": "[concat('https://', parameters('destinationAdlsGen2AccountName'), '.dfs.core.windows.net')]",
    "destinationAdlsGen2ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('destinationAdlsGen2AccountName'), ';AccountKey=', parameters('destinationAdlsGen2AccountKey'), ';EndpointSuffix=core.windows.net')]",
    "sourceLinkedServiceName": "SourceO365LinkedService",
    "sourceLinkedServicePrincipalId": "2bc40e89-fbed-40ca-825b-a77765999773",
    "sourceLinkedServicePrincipalKey": "Ey.?KGc-OsRXeXG=dRQyCoe70jyaz6w5",
    "sourceLinkedServicePrincipalTenantId": "3b8d63b8-70b9-4b8c-9099-44ef5521f3ab",
    "destinationLinkedServiceName": "DestinationLinkedService",
    "inputEventDatasetName": "O365InputEventDataset",
    "inputMessageDatasetName": "O365InputMessageDataset",
    "outputEventDatasetName": "O365OutputEventDataset",
    "outputMessageDatasetName": "O365OutputMessageDataset",
    "pipelineName": "mypipeline",
    "triggerName": "mytrigger",
    "webSiteName": "[parameters('webSiteName')]",
    "hdiClusterName": "myhdicluster",
    "hdiClusterLinkedServiceName": "HDIClusterLinkedService",
    "userAssignedManagedIdentitiesResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.managedidentity/userassignedidentities/', parameters('userAssignedManagedIdentityName'))]",
    "hdiClusterStorageAccountName": "[concat(parameters('destinationAdlsGen2AccountName'), '.dfs.core.windows.net')]",
    "hdiClusterStorageAccountFileSystem": "[concat('cluster-', variables('hdiClusterName'))]",
    "hdiClusterStorageAccountResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.storage/storageaccounts/', parameters('destinationAdlsGen2AccountName'))]",
    "hdiClusterUri": "[concat('https://', variables('hdiClusterName'), '.azurehdinsight.net')]",
    "pySparkScriptContainer": "scripts",
    "pySparkScriptName": "wkwScoreCompute.py",
    "isBackfill": "[concat('bool(equals(trigger().outputs.windowStartTime,''', parameters('triggerStartTime'),'''))')]",
    "backFillIntervalNegative": "[sub(0, parameters('backFillInterval'))]",
    "backfillStart": "[concat('formatDateTime(adddays(trigger().outputs.windowStartTime,', variables('backFillIntervalNegative'),', ''yyyy-MM-ddTHH:mm:ss.fffffffzzz''),''yyyy-MM-ddTHH:mm:ssZ'')')]",
    "incrementalStart": "formatDateTime(adddays(trigger().outputs.windowStartTime, 0,'yyyy-MM-ddTHH:mm:ss.fffffffzzz'),'yyyy-MM-ddTHH:mm:ssZ')",
    "windowStart": "[concat('@if(', variables('isBackfill'), ',',variables('backfillStart'), ',',variables('incrementalStart'),')')]",
    "windowEnd": "@formatDateTime(adddays(trigger().outputs.windowEndTime, 0,'yyyy-MM-ddTHH:mm:ss.fffffffzzz'),'yyyy-MM-ddTHH:mm:ssZ')",
    "hostingPlanName": "Free",
    "skuCapacity": "1",
    "skuName": "F1",
    "aadInstance": "https://login.microsoftonline.com/",
    "artifacts": {
      "webAppRemote": "https://samplestorage.blob.core.windows.net/webappcontainer/WhoKnowWho.zip"
    },
    "outputDataLakeStore": {
      "containerName": "data",
      "messagePath": "message",
      "eventPath": "event"
    },
    "destinationMessageAdlsGen2URL": "[concat('abfss://', variables('outputDataLakeStore').containerName, '@', parameters('destinationAdlsGen2AccountName'), '.dfs.core.windows.net/', variables('outputDataLakeStore').messagePath)]"
  },
  "resources": [
    {
      "apiVersion": "2015-03-01-preview",
      "name": "[variables('hdiClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "clusterVersion": "3.6",
        "osType": "Linux",
        "tier": "Standard",
        "clusterDefinition": {
          "kind": "SPARK",
          "componentVersion": {
            "Spark": "2.3"
          },
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "admin",
              "restAuthCredential.password": "[parameters('hdiClusterPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[variables('hdiClusterStorageAccountName')]",
              "isDefault": true,
              "fileSystem": "[variables('hdiClusterStorageAccountFileSystem')]",
              "resourceId": "[variables('hdiClusterStorageAccountResourceId')]",
              "msiResourceId": "[variables('userAssignedManagedIdentitiesResourceId')]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "autoscale": null,
              "name": "headnode",
              "minInstanceCount": 1,
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "Standard_D12_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "sshuser",
                  "password": "[parameters('hdiClusterPassword')]"
                }
              },
              "virtualNetworkProfile": null,
              "scriptActions": [],
              "dataDisksGroups": null
            },
            {
              "autoscale": null,
              "name": "workernode",
              "targetInstanceCount": 4,
              "hardwareProfile": {
                "vmSize": "Standard_D13_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "sshuser",
                  "password": "[parameters('hdiClusterPassword')]"
                }
              },
              "virtualNetworkProfile": null,
              "scriptActions": [],
              "dataDisksGroups": null
            }
          ]
        }
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[variables('userAssignedManagedIdentitiesResourceId')]": {}
        }
      }
    },
    {
      "name": "[variables('dataFactoryName')]",
      "apiVersion": "2017-09-01-preview",
      "type": "Microsoft.DataFactory/factories",
      "comments": "Creates the ADF pipeline that copies data from O365 to the newly created destination ADLS.",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('sourceLinkedServiceName'))]",
          "type": "Microsoft.DataFactory/factories/linkedServices",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "type": "Office365",
            "typeProperties": {
              "office365TenantId": "[subscription().tenantId]",
              "servicePrincipalTenantId": "[variables('sourceLinkedServicePrincipalTenantId')]",
              "servicePrincipalId": "[variables('sourceLinkedServicePrincipalId')]",
              "servicePrincipalKey": {
                "type": "SecureString",
                "value": "[variables('sourceLinkedServicePrincipalKey')]"
              }
            }
          },
          "dependsOn": ["[variables('dataFactoryId')]"]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('destinationLinkedServiceName'))]",
          "type": "Microsoft.DataFactory/factories/linkedServices",
          "apiVersion": "2018-06-01",
          "properties": {
              "annotations": [],
              "type": "AzureBlobFS",
              "typeProperties": {
                  "url": "[variables('destinationAdlsGen2URL')]",
                  "tenant": "[subscription().tenantId]",
                  "servicePrincipalId": "[parameters('destinationServicePrincipalId')]",
                  "servicePrincipalKey": {
                      "type": "SecureString",
                      "value": "[parameters('destinationServicePrincipalKey')]"
                  }
              }
          },
          "dependsOn": ["[variables('dataFactoryId')]"]
        },
        {
            "name": "[concat(variables('dataFactoryName'), '/', concat(variables('destinationLinkedServiceName'), 'blob'))]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[variables('destinationAdlsGen2ConnectionString')]"
                }
            },
            "dependsOn": ["[variables('dataFactoryId')]"]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('inputMessageDatasetName'))]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "properties": {
            "linkedServiceName": {
              "referenceName": "[variables('sourceLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "Office365Table",
            "schema": [],
            "typeProperties": {
              "tableName": "BasicDataSet_v0.Message_v1"
            }
          },
          "dependsOn": [
            "[variables('dataFactoryId')]",
            "[concat(variables('dataFactoryId'), '/linkedServices/', variables('sourceLinkedServiceName'))]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('outputMessageDatasetName'))]",
          "type": "Microsoft.DataFactory/factories/datasets",
          "apiVersion": "2018-06-01",
          "properties": {
            "linkedServiceName": {
              "referenceName": "[variables('destinationLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "annotations": [],
            "type": "Binary",
            "typeProperties": {
              "location": {
                "type": "AzureBlobFSLocation",
                "folderPath": "[concat(variables('outputDataLakeStore').containerName, '/', variables('outputDataLakeStore').messagePath)]"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryId')]",
            "[concat(variables('dataFactoryId'), '/linkedServices/', variables('destinationLinkedServiceName'))]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('hdiClusterLinkedServiceName'))]",
          "type": "Microsoft.DataFactory/factories/linkedServices",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "type": "HDInsight",
            "typeProperties": {
              "clusterUri": "[variables('hdiClusterUri')]",
              "userName": "admin",
              "password": {
                "type": "SecureString",
                "value": "[parameters('hdiClusterPassword')]"
              },
              "isEspEnabled": false,
              "fileSystem": "[variables('hdiClusterStorageAccountFileSystem')]",
              "linkedServiceName": {
                "referenceName": "[variables('destinationLinkedServiceName')]",
                "type": "LinkedServiceReference"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryId')]",
            "[concat(variables('dataFactoryId'), '/linkedServices/', variables('destinationLinkedServiceName'))]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('pipelineName'))]",
          "type": "Microsoft.DataFactory/factories/pipelines",
          "apiVersion": "2018-06-01",
          "properties": {
            "activities": [
              {
                "name": "CopyO365Emails",
                "type": "Copy",
                "dependsOn": [],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "Office365Source",
                    "dateFilterColumn": "receivedDateTime",
                    "startTime": {
                      "value": "@pipeline().parameters.windowStart",
                      "type": "Expression"
                    },
                    "endTime": {
                      "value": "@pipeline().parameters.windowEnd",
                      "type": "Expression"
                    },
                    "userScopeFilterUri": "",
                    "outputColumns": [
                      {
                        "name": "receivedDateTime"
                      },
                      {
                        "name": "sentDateTime"
                      },
                      {
                        "name": "hasAttachments"
                      },
                      {
                        "name": "internetMessageId"
                      },
                      {
                        "name": "subject"
                      },
                      {
                        "name": "importance"
                      },
                      {
                        "name": "parentFolderId"
                      },
                      {
                        "name": "sender"
                      },
                      {
                        "name": "from"
                      },
                      {
                        "name": "toRecipients"
                      },
                      {
                        "name": "ccRecipients"
                      },
                      {
                        "name": "bccRecipients"
                      },
                      {
                        "name": "replyTo"
                      },
                      {
                        "name": "conversationId"
                      },
                      {
                        "name": "uniqueBody"
                      },
                      {
                        "name": "isDeliveryReceiptRequested"
                      },
                      {
                        "name": "isReadReceiptRequested"
                      },
                      {
                        "name": "isRead"
                      },
                      {
                        "name": "isDraft"
                      },
                      {
                        "name": "webLink"
                      },
                      {
                        "name": "createdDateTime"
                      },
                      {
                        "name": "lastModifiedDateTime"
                      },
                      {
                        "name": "changeKey"
                      },
                      {
                        "name": "categories"
                      },
                      {
                        "name": "id"
                      },
                      {
                        "name": "attachments"
                      },
                      {
                        "name": "inferenceClassification"
                      },
                      {
                        "name": "flag"
                      },
                      {
                        "name": "body"
                      },
                      {
                        "name": "bodyPreview"
                      },
                      {
                        "name": "internetMessageHeaders"
                      }
                    ]
                  },
                  "sink": {
                    "type": "BinarySink",
                    "storeSettings": {
                      "type": "AzureBlobFSWriteSettings"
                    }
                  },
                  "enableStaging": false
                },
                "inputs": [
                  {
                    "referenceName": "[variables('inputMessageDatasetName')]",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('outputMessageDatasetName')]",
                    "type": "DatasetReference",
                    "parameters": {}
                  }
                ]
              },
              {
                "name": "WKWScoreCompute",
                "type": "HDInsightSpark",
                "dependsOn": [
                  {
                    "activity": "CopyO365Emails",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "rootPath": "[variables('pySparkScriptContainer')]",
                  "entryFilePath": "[variables('pySparkScriptName')]",
                  "arguments": [
                    "[variables('destinationMessageAdlsGen2URL')]"
                  ],
                  "sparkJobLinkedService": {
                    "referenceName": "[concat(variables('destinationLinkedServiceName'), 'blob')]",
                    "type": "LinkedServiceReference"
                  }
                },
                "linkedServiceName": {
                  "referenceName": "[variables('hdiClusterLinkedServiceName')]",
                  "type": "LinkedServiceReference"
                }
              }
            ],
            "parameters": {
              "windowStart": {
                "type": "string"
              },
              "windowEnd": {
                "type": "string"
              }
            },
            "annotations": []
          },
          "dependsOn": [
            "[variables('dataFactoryId')]",
            "[concat(variables('dataFactoryId'), '/datasets/', variables('inputMessageDatasetName'))]",
            "[concat(variables('dataFactoryId'), '/datasets/', variables('outputMessageDatasetName'))]",
            "[concat(variables('dataFactoryId'), '/linkedServices/', variables('destinationLinkedServiceName'), 'blob')]",
            "[concat(variables('dataFactoryId'), '/linkedServices/', variables('hdiClusterLinkedServiceName'))]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/', variables('triggerName'))]",
          "type": "Microsoft.DataFactory/factories/triggers",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "runtimeState": "Started",
            "pipeline": {
              "pipelineReference": {
                "referenceName": "[variables('pipelineName')]",
                "type": "PipelineReference"
              },
              "parameters": {
                "windowStart": "[variables('windowStart')]",
                "windowEnd": "[variables('windowEnd')]"
              }
            },
            "type": "TumblingWindowTrigger",
            "typeProperties": {
              "frequency": "Hour",
              "interval": 24,
              "startTime": "[parameters('triggerStartTime')]",
              "delay": "00:00:01",
              "maxConcurrency": 10,
              "retryPolicy": {
                "count": 2,
                "intervalInSeconds": 30
              },
              "dependsOn": []
            }
          },
          "dependsOn": [
            "[variables('dataFactoryId')]",
            "[concat(variables('dataFactoryId'), '/pipelines/', variables('pipelineName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.DataFactory/factories/triggers/status",
      "name": "[concat(variables('dataFactoryName'), '/', variables('triggerName'), '/start')]",
      "apiVersion": "2017-09-01-preview",
      "dependsOn": [
      "[concat(variables('dataFactoryId'), '/triggers/', variables('triggerName'))]"
      ],
      "properties": {}
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[variables('skuName')]",
        "capacity": "[int(variables('skuCapacity'))]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "comments": "Creates the web app that uses data stored in the newly created target ADLS.",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "comments": "Creates the web app deployment.",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
          ],
          "tags": {
            "displayName": "WKWWebAppDeployment"
          },
          "properties": {
            "packageUri": "[variables('artifacts').webAppRemote]",
            "dbType": "None",
            "setParameters": {
              "IIS Web Application Name": "[variables('webSiteName')]"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "comments": "Creates app setting overrides for the web app.",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]",
            "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "AppSettingsConfiguration"
          },
          "properties": {
            "arm:TenantId": "[subscription().tenantId]",
            "arm:ClientId": "[parameters('destinationServicePrincipalId')]",
            "arm:PostLogoutRedirectUri": "[concat('https://', variables('webSiteName'), '.azurewebsites.net/')]",
            "arm:AADInstance": "[variables('aadInstance')]",
            "arm:SubscriptionId": "[subscription().subscriptionId]",
            "arm:ManagedResourceGroupName": "[resourceGroup().name]",
            "arm:DataFactoryName": "[variables('dataFactoryName')]",
            "arm:PipelineName": "[variables('pipelineName')]",
            "arm:ClientSecret": "[parameters('destinationServicePrincipalKey')]",
            "arm:AccountName": "[variables('destinationAdlsAccountName')]",
            "arm:Path": "[variables('outputDataLakeStore').containerName]"
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "AutoScaleSettings"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": 1,
              "maximum": 2,
              "default": 1
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": false,
        "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "applicationId": "[variables('webSiteName')]"
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "pid-8ac71724-bc0f-5773-a386-020c47e097f8", 
      "type": "Microsoft.Resources/deployments",
      "properties": {
          "mode": "Incremental",
          "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": []
          }
      }
    }
  ]
}
